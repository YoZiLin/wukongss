<?xml version="1.0"?>
<doc>
    <assembly>
        <name>zxing.presentation.Fakes</name>
    </assembly>
    <members>
        <member name="T:ZXing.Fakes.ShimBitmapSourceLuminanceSource">
            <summary>ZXing.BitmapSourceLuminanceSource 的填充码类型</summary>
        </member>
        <member name="M:ZXing.Fakes.ShimBitmapSourceLuminanceSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ZXing.Fakes.ShimBitmapSourceLuminanceSource.#ctor(ZXing.BitmapSourceLuminanceSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:ZXing.Fakes.ShimBitmapSourceLuminanceSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.AllInstances.CalculateLuminanceBGR565BitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceBGR565(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.AllInstances.CalculateLuminanceBGRABitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceBGRA(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.AllInstances.CalculateLuminanceBGRBitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceBGR(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.AllInstances.CalculateLuminanceRGBBitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceRGB(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.AllInstances.CreateLuminanceSourceByteArrayInt32Int32">
            <summary>设置 BitmapSourceLuminanceSource.CreateLuminanceSource(Byte[] newLuminances, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="M:ZXing.Fakes.ShimBitmapSourceLuminanceSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ZXing.Fakes.ShimBitmapSourceLuminanceSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.CalculateLuminanceBGR565BitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceBGR565(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.CalculateLuminanceBGRABitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceBGRA(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.CalculateLuminanceBGRBitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceBGR(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.CalculateLuminanceRGBBitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.CalculateLuminanceRGB(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.ConstructorBitmapSource">
            <summary>设置 BitmapSourceLuminanceSource.BitmapSourceLuminanceSource(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.ConstructorInt32Int32">
            <summary>设置 BitmapSourceLuminanceSource.BitmapSourceLuminanceSource(Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Fakes.ShimBitmapSourceLuminanceSource.CreateLuminanceSourceByteArrayInt32Int32">
            <summary>设置 BitmapSourceLuminanceSource.CreateLuminanceSource(Byte[] newLuminances, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="T:ZXing.Fakes.StubBitmapSourceLuminanceSource">
            <summary>ZXing.BitmapSourceLuminanceSource 的存根类型</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.#ctor(System.Windows.Media.Imaging.BitmapSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.AttachBackingFieldToHeight">
            <summary>附加委托以将 StubBitmapSourceLuminanceSource.Height 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.AttachBackingFieldToWidth">
            <summary>附加委托以将 StubBitmapSourceLuminanceSource.Width 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.CreateLuminanceSource(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BitmapSourceLuminanceSource.CreateLuminanceSource(Byte[] newLuminances, Int32 width, Int32 height) 的 存根</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.CreateLuminanceSourceByteArrayInt32Int32">
            <summary>设置 BitmapSourceLuminanceSource.CreateLuminanceSource(Byte[] newLuminances, Int32 width, Int32 height) 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.CropInt32Int32Int32Int32">
            <summary>设置 BaseLuminanceSource.crop(Int32 left, Int32 top, Int32 width, Int32 height) 的 stub</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.CropSupported">
            <summary>设置 BaseLuminanceSource.get_CropSupported() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.CropSupportedGet">
            <summary>设置 BaseLuminanceSource.get_CropSupported() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.GetRowInt32ByteArray">
            <summary>设置 BaseLuminanceSource.getRow(Int32 y, Byte[] row) 的 stub</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.Height">
            <summary>设置 LuminanceSource.get_Height() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.HeightGet">
            <summary>设置 LuminanceSource.get_Height() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.HeightSetInt32">
            <summary>设置 LuminanceSource.set_Height(Int32 value) 的 stub</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.InitializeStub">
            <summary>初始化 type StubBitmapSourceLuminanceSource 的新实例</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.InversionSupported">
            <summary>设置 BaseLuminanceSource.get_InversionSupported() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.InversionSupportedGet">
            <summary>设置 BaseLuminanceSource.get_InversionSupported() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.Invert">
            <summary>设置 BaseLuminanceSource.invert() 的 stub</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.Matrix">
            <summary>设置 BaseLuminanceSource.get_Matrix() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.MatrixGet">
            <summary>设置 BaseLuminanceSource.get_Matrix() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.RotateCounterClockwise">
            <summary>设置 BaseLuminanceSource.rotateCounterClockwise() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.RotateCounterClockwise45">
            <summary>设置 BaseLuminanceSource.rotateCounterClockwise45() 的 stub</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.RotateSupported">
            <summary>设置 BaseLuminanceSource.get_RotateSupported() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.RotateSupportedGet">
            <summary>设置 BaseLuminanceSource.get_RotateSupported() 的 stub</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.ToString">
            <summary>设置 LuminanceSource.ToString() 的 存根</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.ToString01">
            <summary>设置 LuminanceSource.ToString() 的 stub</summary>
        </member>
        <member name="P:ZXing.Fakes.StubBitmapSourceLuminanceSource.Width">
            <summary>设置 LuminanceSource.get_Width() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.WidthGet">
            <summary>设置 LuminanceSource.get_Width() 的 stub</summary>
        </member>
        <member name="F:ZXing.Fakes.StubBitmapSourceLuminanceSource.WidthSetInt32">
            <summary>设置 LuminanceSource.set_Width(Int32 value) 的 stub</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 BaseLuminanceSource.crop(Int32 left, Int32 top, Int32 width, Int32 height) 的 存根</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.getRow(System.Int32,System.Byte[])">
            <summary>设置 BaseLuminanceSource.getRow(Int32 y, Byte[] row) 的 存根</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.invert">
            <summary>设置 BaseLuminanceSource.invert() 的 存根</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.rotateCounterClockwise">
            <summary>设置 BaseLuminanceSource.rotateCounterClockwise() 的 存根</summary>
        </member>
        <member name="M:ZXing.Fakes.StubBitmapSourceLuminanceSource.rotateCounterClockwise45">
            <summary>设置 BaseLuminanceSource.rotateCounterClockwise45() 的 存根</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.ShimBarcodeReader">
            <summary>ZXing.Presentation.BarcodeReader 的填充码类型</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeReader.#ctor(ZXing.Presentation.BarcodeReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.ShimBarcodeReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeReader.Bind(ZXing.IBarcodeReaderGeneric{System.Windows.Media.Imaging.BitmapSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeReader.Bind(ZXing.IMultipleBarcodeReaderGeneric{System.Windows.Media.Imaging.BitmapSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeReader.Constructor">
            <summary>设置 BarcodeReader.BarcodeReader() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeReader.ConstructorReaderFuncOfBitmapSourceLuminanceSourceFuncOfLuminanceSourceBinarizer">
            <summary>设置 BarcodeReader.BarcodeReader(Reader reader, Func`2&lt;BitmapSource,LuminanceSource&gt; createLuminanceSource, Func`2&lt;LuminanceSource,Binarizer&gt; createBinarizer) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeReader.ConstructorReaderFuncOfBitmapSourceLuminanceSourceFuncOfLuminanceSourceBinarizerFuncOfByteArrayInt32Int32RGBLuminanceSourceBitmapFormatLuminanceSource">
            <summary>设置 BarcodeReader.BarcodeReader(Reader reader, Func`2&lt;BitmapSource,LuminanceSource&gt; createLuminanceSource, Func`2&lt;LuminanceSource,Binarizer&gt; createBinarizer, Func`5&lt;Byte[],Int32,Int32,BitmapFormat,LuminanceSource&gt; createRGBLuminanceSource) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeReader.StaticConstructor">
            <summary>设置 BarcodeReader.BarcodeReader() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeReader._cctorb__0BitmapSource">
            <summary>设置 BarcodeReader.&lt;.cctor&gt;b__0(BitmapSource bitmap) 的 填充码</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.ShimBarcodeWriter">
            <summary>ZXing.Presentation.BarcodeWriter 的填充码类型</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriter.#ctor(ZXing.Presentation.BarcodeWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.ShimBarcodeWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriter.Bind(ZXing.IBarcodeWriterGeneric{System.Windows.Media.Imaging.WriteableBitmap})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeWriter.Constructor">
            <summary>设置 BarcodeWriter.BarcodeWriter() 的 填充码</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry">
            <summary>ZXing.Presentation.BarcodeWriterGeometry 的填充码类型</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.#ctor(ZXing.Presentation.BarcodeWriterGeometry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.Bind(ZXing.IBarcodeWriterGeneric{System.Windows.Media.Geometry})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.ShimBarcodeWriterGeometry.Constructor">
            <summary>设置 BarcodeWriterGeometry.BarcodeWriterGeometry() 的 填充码</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.StubBarcodeReader">
            <summary>ZXing.Presentation.BarcodeReader 的存根类型</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeReader.#ctor(ZXing.Reader,System.Func{System.Windows.Media.Imaging.BitmapSource,ZXing.LuminanceSource},System.Func{ZXing.LuminanceSource,ZXing.Binarizer})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeReader.#ctor(ZXing.Reader,System.Func{System.Windows.Media.Imaging.BitmapSource,ZXing.LuminanceSource},System.Func{ZXing.LuminanceSource,ZXing.Binarizer},System.Func{System.Byte[],System.Int32,System.Int32,ZXing.RGBLuminanceSource.BitmapFormat,ZXing.LuminanceSource})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeReader.Decode(ZXing.LuminanceSource)">
            <summary>设置 BarcodeReaderGeneric`1.Decode(LuminanceSource luminanceSource) 的 存根</summary>
        </member>
        <member name="F:ZXing.Presentation.Fakes.StubBarcodeReader.DecodeLuminanceSource">
            <summary>设置 BarcodeReaderGeneric`1.Decode(LuminanceSource luminanceSource) 的 stub</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeReader.DecodeMultiple(ZXing.LuminanceSource)">
            <summary>设置 BarcodeReaderGeneric`1.DecodeMultiple(LuminanceSource luminanceSource) 的 存根</summary>
        </member>
        <member name="F:ZXing.Presentation.Fakes.StubBarcodeReader.DecodeMultipleLuminanceSource">
            <summary>设置 BarcodeReaderGeneric`1.DecodeMultiple(LuminanceSource luminanceSource) 的 stub</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeReader.InitializeStub">
            <summary>初始化 type StubBarcodeReader 的新实例</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.StubBarcodeWriter">
            <summary>ZXing.Presentation.BarcodeWriter 的存根类型</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeWriter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeWriter.InitializeStub">
            <summary>初始化 type StubBarcodeWriter 的新实例</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ZXing.Presentation.Fakes.StubBarcodeWriterGeometry">
            <summary>ZXing.Presentation.BarcodeWriterGeometry 的存根类型</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeWriterGeometry.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeWriterGeometry.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:ZXing.Presentation.Fakes.StubBarcodeWriterGeometry.InitializeStub">
            <summary>初始化 type StubBarcodeWriterGeometry 的新实例</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeWriterGeometry.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ZXing.Presentation.Fakes.StubBarcodeWriterGeometry.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ZXing.Rendering.Fakes.ShimGeometryRenderer">
            <summary>ZXing.Rendering.GeometryRenderer 的填充码类型</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimGeometryRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimGeometryRenderer.#ctor(ZXing.Rendering.GeometryRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:ZXing.Rendering.Fakes.ShimGeometryRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimGeometryRenderer.AllInstances.RenderBitMatrixBarcodeFormatString">
            <summary>设置 GeometryRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimGeometryRenderer.AllInstances.RenderBitMatrixBarcodeFormatStringEncodingOptions">
            <summary>设置 GeometryRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content, EncodingOptions options) 的 填充码</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimGeometryRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimGeometryRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimGeometryRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimGeometryRenderer.Bind(ZXing.Rendering.IBarcodeRenderer{System.Windows.Media.Geometry})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimGeometryRenderer.Constructor">
            <summary>设置 GeometryRenderer.GeometryRenderer() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimGeometryRenderer.GetCellInt32Int32BitMatrix">
            <summary>设置 GeometryRenderer.GetCell(Int32 c, Int32 r, BitMatrix matrix) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimGeometryRenderer.RenderBitMatrixBarcodeFormatString">
            <summary>设置 GeometryRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimGeometryRenderer.RenderBitMatrixBarcodeFormatStringEncodingOptions">
            <summary>设置 GeometryRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content, EncodingOptions options) 的 填充码</summary>
        </member>
        <member name="T:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer">
            <summary>ZXing.Rendering.WriteableBitmapRenderer 的填充码类型</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.#ctor(ZXing.Rendering.WriteableBitmapRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.BackgroundGet">
            <summary>设置 WriteableBitmapRenderer.get_Background() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.BackgroundSetColor">
            <summary>设置 WriteableBitmapRenderer.set_Background(Color value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontFamilyGet">
            <summary>设置 WriteableBitmapRenderer.get_FontFamily() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontFamilySetFontFamily">
            <summary>设置 WriteableBitmapRenderer.set_FontFamily(FontFamily value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontSizeGet">
            <summary>设置 WriteableBitmapRenderer.get_FontSize() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontSizeSetDouble">
            <summary>设置 WriteableBitmapRenderer.set_FontSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontStretchGet">
            <summary>设置 WriteableBitmapRenderer.get_FontStretch() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontStretchSetFontStretch">
            <summary>设置 WriteableBitmapRenderer.set_FontStretch(FontStretch value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontStyleGet">
            <summary>设置 WriteableBitmapRenderer.get_FontStyle() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontStyleSetFontStyle">
            <summary>设置 WriteableBitmapRenderer.set_FontStyle(FontStyle value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontWeightGet">
            <summary>设置 WriteableBitmapRenderer.get_FontWeight() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.FontWeightSetFontWeight">
            <summary>设置 WriteableBitmapRenderer.set_FontWeight(FontWeight value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.ForegroundGet">
            <summary>设置 WriteableBitmapRenderer.get_Foreground() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.ForegroundSetColor">
            <summary>设置 WriteableBitmapRenderer.set_Foreground(Color value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.RenderBitMatrixBarcodeFormatString">
            <summary>设置 WriteableBitmapRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.AllInstances.RenderBitMatrixBarcodeFormatStringEncodingOptions">
            <summary>设置 WriteableBitmapRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content, EncodingOptions options) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.BackgroundGet">
            <summary>设置 WriteableBitmapRenderer.get_Background() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.BackgroundSetColor">
            <summary>设置 WriteableBitmapRenderer.set_Background(Color value) 的 填充码</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.Bind(ZXing.Rendering.IBarcodeRenderer{System.Windows.Media.Imaging.WriteableBitmap})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.Constructor">
            <summary>设置 WriteableBitmapRenderer.WriteableBitmapRenderer() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontFamilyGet">
            <summary>设置 WriteableBitmapRenderer.get_FontFamily() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontFamilySetFontFamily">
            <summary>设置 WriteableBitmapRenderer.set_FontFamily(FontFamily value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontSizeGet">
            <summary>设置 WriteableBitmapRenderer.get_FontSize() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontSizeSetDouble">
            <summary>设置 WriteableBitmapRenderer.set_FontSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontStretchGet">
            <summary>设置 WriteableBitmapRenderer.get_FontStretch() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontStretchSetFontStretch">
            <summary>设置 WriteableBitmapRenderer.set_FontStretch(FontStretch value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontStyleGet">
            <summary>设置 WriteableBitmapRenderer.get_FontStyle() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontStyleSetFontStyle">
            <summary>设置 WriteableBitmapRenderer.set_FontStyle(FontStyle value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontWeightGet">
            <summary>设置 WriteableBitmapRenderer.get_FontWeight() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.FontWeightSetFontWeight">
            <summary>设置 WriteableBitmapRenderer.set_FontWeight(FontWeight value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.ForegroundGet">
            <summary>设置 WriteableBitmapRenderer.get_Foreground() 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.ForegroundSetColor">
            <summary>设置 WriteableBitmapRenderer.set_Foreground(Color value) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.RenderBitMatrixBarcodeFormatString">
            <summary>设置 WriteableBitmapRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.RenderBitMatrixBarcodeFormatStringEncodingOptions">
            <summary>设置 WriteableBitmapRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content, EncodingOptions options) 的 填充码</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.ShimWriteableBitmapRenderer.StaticConstructor">
            <summary>设置 WriteableBitmapRenderer.WriteableBitmapRenderer() 的 填充码</summary>
        </member>
        <member name="T:ZXing.Rendering.Fakes.StubGeometryRenderer">
            <summary>ZXing.Rendering.GeometryRenderer 的存根类型</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.StubGeometryRenderer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.StubGeometryRenderer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.StubGeometryRenderer.InitializeStub">
            <summary>初始化 type StubGeometryRenderer 的新实例</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.StubGeometryRenderer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.StubGeometryRenderer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer">
            <summary>ZXing.Rendering.WriteableBitmapRenderer 的存根类型</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer.InitializeStub">
            <summary>初始化 type StubWriteableBitmapRenderer 的新实例</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer.Render(ZXing.Common.BitMatrix,ZXing.BarcodeFormat,System.String,ZXing.Common.EncodingOptions)">
            <summary>设置 WriteableBitmapRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content, EncodingOptions options) 的 存根</summary>
        </member>
        <member name="F:ZXing.Rendering.Fakes.StubWriteableBitmapRenderer.RenderBitMatrixBarcodeFormatStringEncodingOptions">
            <summary>设置 WriteableBitmapRenderer.Render(BitMatrix matrix, BarcodeFormat format, String content, EncodingOptions options) 的 stub</summary>
        </member>
    </members>
</doc>
